{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { SELECT_SUBREDDIT, INVALIDATE_SUBREDDIT, REQUEST_POSTS, RECEIVE_POSTS } from '../actions';\n\nfunction selectedsubreddit(state = 'reactjs', action) {\n  switch (action.type) {\n    case SELECT_SUBREDDIT:\n      return action.subreddit;\n\n    default:\n      return state;\n  }\n}\n\nfunction posts(state = {\n  isFetching: false,\n  didInvalidate: false,\n  items: []\n}, action) {\n  switch (action.type) {\n    case INVALIDATE_SUBREDDIT:\n      return Object.assign({}, state, {\n        didInvalidate: true\n      });\n\n    case REQUEST_POSTS:\n      return Object.assign({}, state, {\n        isFetching: true,\n        didInvalidate: false\n      });\n\n    case RECEIVE_POSTS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        didInvalidate: false,\n        items: action.posts,\n        lastUpdated: action.receivedAt\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction postsBySubreddit(state = {}, action) {\n  switch (action.type) {\n    case INVALIDATE_SUBREDDIT:\n    case RECEIVE_POSTS:\n    case REQUEST_POSTS:\n      return Object.assign({}, state, {\n        [action.subreddit]: posts(state[action.subreddit], action)\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  postsBySubreddit,\n  selectedsubreddit\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/xuqiang/Desktop/demos/react/redux/redux-firstexpr/src/redux/reducers.js"],"names":["combineReducers","SELECT_SUBREDDIT","INVALIDATE_SUBREDDIT","REQUEST_POSTS","RECEIVE_POSTS","selectedsubreddit","state","action","type","subreddit","posts","isFetching","didInvalidate","items","Object","assign","lastUpdated","receivedAt","postsBySubreddit","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,gBADF,EAEEC,oBAFF,EAGEC,aAHF,EAIEC,aAJF,QAKO,YALP;;AAOA,SAASC,iBAAT,CAA2BC,KAAK,GAAG,SAAnC,EAA8CC,MAA9C,EAAsD;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,gBAAL;AACE,aAAOM,MAAM,CAACE,SAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,SAASI,KAAT,CACEJ,KAAK,GAAG;AACNK,EAAAA,UAAU,EAAE,KADN;AAENC,EAAAA,aAAa,EAAE,KAFT;AAGNC,EAAAA,KAAK,EAAE;AAHD,CADV,EAMEN,MANF,EAOE;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,oBAAL;AACE,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAC9BM,QAAAA,aAAa,EAAE;AADe,OAAzB,CAAP;;AAGF,SAAKT,aAAL;AACE,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAC9BK,QAAAA,UAAU,EAAE,IADkB;AAE9BC,QAAAA,aAAa,EAAE;AAFe,OAAzB,CAAP;;AAIF,SAAKR,aAAL;AACE,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAC9BK,QAAAA,UAAU,EAAE,KADkB;AAE9BC,QAAAA,aAAa,EAAE,KAFe;AAG9BC,QAAAA,KAAK,EAAEN,MAAM,CAACG,KAHgB;AAI9BM,QAAAA,WAAW,EAAET,MAAM,CAACU;AAJU,OAAzB,CAAP;;AAMF;AACE,aAAOX,KAAP;AAlBJ;AAoBD;;AAED,SAASY,gBAAT,CAA0BZ,KAAK,GAAG,EAAlC,EAAsCC,MAAtC,EAA8C;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,oBAAL;AACA,SAAKE,aAAL;AACA,SAAKD,aAAL;AACE,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAC9B,SAACC,MAAM,CAACE,SAAR,GAAoBC,KAAK,CAACJ,KAAK,CAACC,MAAM,CAACE,SAAR,CAAN,EAA0BF,MAA1B;AADK,OAAzB,CAAP;;AAGF;AACE,aAAOD,KAAP;AARJ;AAUD;;AAED,MAAMa,WAAW,GAAGnB,eAAe,CAAC;AAClCkB,EAAAA,gBADkC;AAElCb,EAAAA;AAFkC,CAAD,CAAnC;AAKA,eAAec,WAAf","sourcesContent":["import { combineReducers } from 'redux'\nimport {\n  SELECT_SUBREDDIT,\n  INVALIDATE_SUBREDDIT,\n  REQUEST_POSTS,\n  RECEIVE_POSTS\n} from '../actions'\n\nfunction selectedsubreddit(state = 'reactjs', action) {\n  switch (action.type) {\n    case SELECT_SUBREDDIT:\n      return action.subreddit\n    default:\n      return state\n  }\n}\n\nfunction posts(\n  state = {\n    isFetching: false,\n    didInvalidate: false,\n    items: []\n  },\n  action\n) {\n  switch (action.type) {\n    case INVALIDATE_SUBREDDIT:\n      return Object.assign({}, state, {\n        didInvalidate: true\n      })\n    case REQUEST_POSTS:\n      return Object.assign({}, state, {\n        isFetching: true,\n        didInvalidate: false\n      })\n    case RECEIVE_POSTS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        didInvalidate: false,\n        items: action.posts,\n        lastUpdated: action.receivedAt\n      })\n    default:\n      return state\n  }\n}\n\nfunction postsBySubreddit(state = {}, action) {\n  switch (action.type) {\n    case INVALIDATE_SUBREDDIT:\n    case RECEIVE_POSTS:\n    case REQUEST_POSTS:\n      return Object.assign({}, state, {\n        [action.subreddit]: posts(state[action.subreddit], action)\n      })\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  postsBySubreddit,\n  selectedsubreddit\n})\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}