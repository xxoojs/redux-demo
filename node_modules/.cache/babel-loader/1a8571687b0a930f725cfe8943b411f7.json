{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { SELECT_SUBREDDIT, INVALIDATE_SUBREDDIT, REQUEST_POSTS, RECEIVE_POSTS } from '../actions';\n\nfunction selectedsubreddit(state = 'reactjs', action) {\n  switch (action.type) {\n    case SELECT_SUBREDDIT:\n      return action.subreddit;\n\n    default:\n      return state;\n  }\n}\n\nfunction posts(state = {\n  isFetching: false,\n  didInvalidate: false,\n  items: []\n}, action) {\n  switch (action.type) {\n    case INVALIDATE_SUBREDDIT:\n      return Object.assign({}, state, {\n        didInvalidate: true\n      });\n\n    case REQUEST_POSTS:\n      return Object.assign({}, state, {\n        isFetching: true,\n        didInvalidate: false\n      });\n\n    case RECEIVE_POSTS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        didInvalidate: false,\n        items: action.posts,\n        lastUpdated: action.receivedAt\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction postsBySubreddit(state = {}, action) {\n  switch (action.type) {\n    case INVALIDATE_SUBREDDIT:\n    case RECEIVE_POSTS:\n    case REQUEST_POSTS:\n      return Object.assign({}, state, {\n        [action.subreddit]: posts(state[action.subreddit], action)\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  postsBySubreddit,\n  selectedsubreddit\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/xuqiang/Desktop/demos/react/redux/redux-firstexpr/src/redux/reducers.js"],"names":["combineReducers","SELECT_SUBREDDIT","INVALIDATE_SUBREDDIT","REQUEST_POSTS","RECEIVE_POSTS","selectedsubreddit","state","action","type","subreddit","posts","isFetching","didInvalidate","items","Object","assign","lastUpdated","receivedAt","postsBySubreddit","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACCC,gBADD,EAECC,oBAFD,EAGCC,aAHD,EAICC,aAJD,QAKO,YALP;;AAOA,SAASC,iBAAT,CAA2BC,KAAK,GAAG,SAAnC,EAA8CC,MAA9C,EAAsD;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,gBAAL;AACA,aAAOM,MAAM,CAACE,SAAd;;AACA;AACA,aAAOH,KAAP;AAJD;AAMA;;AAED,SAASI,KAAT,CACCJ,KAAK,GAAG;AACPK,EAAAA,UAAU,EAAE,KADL;AAEPC,EAAAA,aAAa,EAAE,KAFR;AAGPC,EAAAA,KAAK,EAAE;AAHA,CADT,EAMCN,MAND,EAOE;AACD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKN,oBAAL;AACA,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAC/BM,QAAAA,aAAa,EAAE;AADgB,OAAzB,CAAP;;AAGA,SAAKT,aAAL;AACA,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAC/BK,QAAAA,UAAU,EAAE,IADmB;AAE/BC,QAAAA,aAAa,EAAE;AAFgB,OAAzB,CAAP;;AAIA,SAAKR,aAAL;AACA,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAC/BK,QAAAA,UAAU,EAAE,KADmB;AAE/BC,QAAAA,aAAa,EAAE,KAFgB;AAG/BC,QAAAA,KAAK,EAAEN,MAAM,CAACG,KAHiB;AAI/BM,QAAAA,WAAW,EAAET,MAAM,CAACU;AAJW,OAAzB,CAAP;;AAMA;AACA,aAAOX,KAAP;AAlBD;AAoBA;;AAED,SAASY,gBAAT,CAA0BZ,KAAK,GAAG,EAAlC,EAAsCC,MAAtC,EAA8C;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKN,oBAAL;AACA,SAAKE,aAAL;AACA,SAAKD,aAAL;AACC,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAC/B,SAACC,MAAM,CAACE,SAAR,GAAoBC,KAAK,CAACJ,KAAK,CAACC,MAAM,CAACE,SAAR,CAAN,EAA0BF,MAA1B;AADM,OAAzB,CAAP;;AAGD;AACC,aAAOD,KAAP;AARF;AAUA;;AAED,MAAMa,WAAW,GAAGnB,eAAe,CAAC;AAClCkB,EAAAA,gBADkC;AAElCb,EAAAA;AAFkC,CAAD,CAAnC;AAKA,eAAec,WAAf","sourcesContent":["import { combineReducers } from 'redux'\nimport {\n\tSELECT_SUBREDDIT,\n\tINVALIDATE_SUBREDDIT,\n\tREQUEST_POSTS,\n\tRECEIVE_POSTS\n} from '../actions'\n\nfunction selectedsubreddit(state = 'reactjs', action) {\n\tswitch (action.type) {\n\t\tcase SELECT_SUBREDDIT:\n\t\treturn action.subreddit\n\t\tdefault:\n\t\treturn state\n\t}\n}\n\nfunction posts(\n\tstate = {\n\t\tisFetching: false,\n\t\tdidInvalidate: false,\n\t\titems: []\n\t},\n\taction\n) {\n\tswitch (action.type) {\n\t\tcase INVALIDATE_SUBREDDIT:\n\t\treturn Object.assign({}, state, {\n\t\t\tdidInvalidate: true\n\t\t})\n\t\tcase REQUEST_POSTS:\n\t\treturn Object.assign({}, state, {\n\t\t\tisFetching: true,\n\t\t\tdidInvalidate: false\n\t\t})\n\t\tcase RECEIVE_POSTS:\n\t\treturn Object.assign({}, state, {\n\t\t\tisFetching: false,\n\t\t\tdidInvalidate: false,\n\t\t\titems: action.posts,\n\t\t\tlastUpdated: action.receivedAt\n\t\t})\n\t\tdefault:\n\t\treturn state\n\t}\n}\n\nfunction postsBySubreddit(state = {}, action) {\n\tswitch (action.type) {\n\t\tcase INVALIDATE_SUBREDDIT:\n\t\tcase RECEIVE_POSTS:\n\t\tcase REQUEST_POSTS:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\t[action.subreddit]: posts(state[action.subreddit], action)\n\t\t\t})\n\t\tdefault:\n\t\t\treturn state\n\t}\t\n}\n\nconst rootReducer = combineReducers({\n  postsBySubreddit,\n  selectedsubreddit\n})\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}